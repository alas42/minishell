ALGO OF minishell

INIT OF structures
WHILE (NOT_EXIT)
|	READ_THE_LINE
|	IF IT IS AN INTERACTION	
|	|	INTERACT HISTORY ?
|	|	INTERACT PROCESS ?
|	ELSE
|	|	PARSING AND 'LEXERING'	-->FILLING STRUCTURES
|	|	ADD_TO_HISTORY
|	|	IF ONLY 1 COMMAND AND IT IS A BUILTIN
|	|	|	CALL THE FUNCTION
|	|	ELSE
|	|	|	CALL EXEC_CMDS
|	|	FI
|	FI
EOW
FREE

Infos about the project :

Download library readline to make this working

/*
 input_red             <
 doub_input            <<
 output_red            >
 doub_outfile_red      >>
 single_quote          ' 
 double_quote          "
 pipe                  |
 dollar                $
 question              ?
 */

//some test cases ==>> if it's correctly setted in the t_cmd structures, it works
echo "hello world" 'this' | wc -l ; ls -l | << grep 'a' >> outfile 					==>> we don't do ';'
awk –f x.awk | sort –u < infile > outfile

Chained list and tab of pointers to char for the same env
{
	Why char **envs and t_env ?
	
	We have to pass a tab of pointers in execve.
	But we have to print them in two different ways in env and export builtins

	Env -> In alphabetical order BUT without double quotes around the value
	Export -> In normal order from envp but the last before NULL will be the terminal
	When adding a key=value, add it just before the line from terminal
}

OBSERVATIONS:

1. When we press only on enter in the minishell, it segfaults
2. the third arg (char **)envp can be NULL or be UNSET
-> We should fill him with basic env variable if it is NULL
-> before using or checking a env variable, we should ALWAYS check if the tab is not NULL